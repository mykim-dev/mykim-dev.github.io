import{a as _,u,b as c,c as m,w as l,o as h,e as t,f as e,n,g as r,p as f,q as y,l as p,_ as b}from"./index-0e7e4e8b.js";const i=s=>(f("data-v-0c70be51"),s=s(),y(),s),g=i(()=>e("div",{class:"sampleGuide"},[e("h2",null,"Block(현재)"),e("div",{class:"displayType typeBlock"}),e("ul",{class:"sampleDesc"},[e("li",null,"height의 값이 가장 긴 컴포넌트를 좌측에 배치해야 자연스러움")]),e("hr"),e("ul",{class:"sampleDesc"},[e("li",null,[e("b",null,"Form Detail 구성은 Block 방식이 적합해 보임")]),e("li",null,"컨트롤의 높이에 대한 기준 필요"),e("li",null,"Diverder 컨트롤 추가")])],-1)),v=[g],G=i(()=>e("div",{class:"sampleGuide"},[e("h2",null,"Grid"),e("div",{class:"displayType typeGrid"}),e("ul",{class:"sampleDesc"},[e("li",null,"Grid 방식은 table, Excel의 cell과 비슷함"),e("li",null,[p(" Screen의 경우 24*n의 셀 기준 row merge 후 컴포넌트를 배치하는 것이 가장 적합 "),e("br"),p(" merge하지 않는 경우 height의 높이가 큰 값을 기준으로 좌우에 배치되는 컴포넌트의 사이즈가 동일해짐 ")])]),e("hr"),e("ul",{class:"sampleDesc"},[e("li",null,[e("b",null,"Screen 구성에 Grid 방식은 is-full 기능과 동일해 보임")]),e("li",null,"Dynamic, Dashboard ~ Dashboard3 타입이 Grid 방식으로 적합")])],-1)),D=[G],k=_({__name:"blockGrid",setup(s){const a=u();return(w,S)=>{const o=c("el-col"),d=c("el-row");return h(),m(d,{class:"qs-screen-row",gutter:10,style:{"grid-template-rows":"repeat(24, 1fr)","grid-template-columns":"repeat(24, 1fr)"}},{default:l(()=>[t(o,{class:"qs-screen-col",span:12,style:{"grid-area":"span 24 / span 12"}},{default:l(()=>[e("div",{class:n(["qs-component",{"is-folder":r(a).appComponentOutlineType=="folder"}])},v,2)]),_:1}),t(o,{class:"qs-screen-col",span:12,style:{"grid-area":"span 24 / span 12"}},{default:l(()=>[e("div",{class:n(["qs-component",{"is-folder":r(a).appComponentOutlineType=="folder"}])},D,2)]),_:1})]),_:1})}}});const q=b(k,[["__scopeId","data-v-0c70be51"]]);export{q as default};
