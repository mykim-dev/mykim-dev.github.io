import{defineComponent as _,resolveComponent as t,openBlock as u,createBlock as m,withCtx as s,createVNode as n,createElementVNode as e,normalizeClass as d,unref as a,pushScopeId as h,popScopeId as f,createTextVNode as r}from"vue";import{u as b,_ as v}from"./index-9c0a46b5.js";const p=l=>(h("data-v-37ddd25b"),l=l(),f(),l),y=p(()=>e("div",{class:"sampleGuide"},[e("h2",null,"Block(현재)"),e("div",{class:"displayType typeBlock"}),e("ul",{class:"sampleDesc"},[e("li",null,"height의 값이 가장 긴 컴포넌트를 좌측에 배치해야 자연스러움")]),e("hr"),e("ul",{class:"sampleDesc"},[e("li",null,[e("b",null,"Form Detail 구성은 Block 방식이 적합해 보임")]),e("li",null,"컨트롤의 높이에 대한 기준 필요"),e("li",null,"Diverder 컨트롤 추가")])],-1)),G=[y],D=p(()=>e("div",{class:"sampleGuide"},[e("h2",null,"Grid"),e("div",{class:"displayType typeGrid"}),e("ul",{class:"sampleDesc"},[e("li",null,"Grid 방식은 table, Excel의 cell과 비슷함"),e("li",null,[r(" Screen의 경우 24*n의 셀 기준 row merge 후 컴포넌트를 배치하는 것이 가장 적합 "),e("br"),r(" merge하지 않는 경우 height의 높이가 큰 값을 기준으로 좌우에 배치되는 컴포넌트의 사이즈가 동일해짐 ")])]),e("hr"),e("ul",{class:"sampleDesc"},[e("li",null,[e("b",null,"Screen 구성에 Grid 방식은 is-full 기능과 동일해 보임")]),e("li",null,"Dynamic, Dashboard ~ Dashboard3 타입이 Grid 방식으로 적합")])],-1)),g=[D],k=_({__name:"blockGrid",setup(l){const o=b();return(S,x)=>{const c=t("el-col"),i=t("el-row");return u(),m(i,{class:"qs-screen-row",gutter:16},{default:s(()=>[n(c,{class:"qs-screen-col",span:12},{default:s(()=>[e("div",{class:d(["qs-component",{"is-folder":a(o).appComponentType=="folder"}])},G,2)]),_:1}),n(c,{class:"qs-screen-col",span:12},{default:s(()=>[e("div",{class:d(["qs-component",{"is-folder":a(o).appComponentType=="folder"}])},g,2)]),_:1})]),_:1})}}});const q=v(k,[["__scopeId","data-v-37ddd25b"]]);export{q as default};
